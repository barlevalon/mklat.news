name: Manual Deploy via Pulumi

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy (commit SHA or "latest")'
        required: true
        default: 'latest'
        type: string
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    name: Deploy via Pulumi
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install infrastructure dependencies
      run: npm ci
      working-directory: ./infrastructure

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Verify image exists
      run: |
        echo "Checking if image exists: me-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mklat-news/mklat-news:${{ inputs.image_tag }}"
        gcloud container images describe me-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mklat-news/mklat-news:${{ inputs.image_tag }}

    - name: Install Pulumi CLI
      uses: pulumi/actions@v4

    - name: Configure Pulumi stack
      run: |
        cd infrastructure
        pulumi config set --stack=prod gcp:project ${{ secrets.GCP_PROJECT_ID }}
        pulumi config set --stack=prod gcp:region me-west1
        pulumi config set --stack=prod domain mklat.news
        pulumi config set --stack=prod --secret cloudflare:apiToken ${{ secrets.CLOUDFLARE_API_TOKEN }}
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

    - name: Deploy infrastructure with specific image tag
      uses: pulumi/actions@v4
      with:
        command: up
        stack-name: prod
        work-dir: ./infrastructure
        upsert: true
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        PULUMI_CONFIG_PASSPHRASE: ""
        IMAGE_TAG: ${{ inputs.image_tag }}

    - name: Get service URL
      run: |
        cd infrastructure
        echo "Service deployed successfully!"
        echo "Service URL: $(pulumi stack output serviceUrl)"
        echo "Image deployed: me-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mklat-news/mklat-news:${{ inputs.image_tag }}"